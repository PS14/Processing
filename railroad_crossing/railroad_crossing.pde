color c1,c2;
int count;
float x,y;
float speed;

import ddf.minim.*;
 AudioPlayer f_song;
 Minim minim;

void setup(){
  size(1000,500);
  
  c1 = color(255,0,0);
  c2 = color(0,0,0);
  count = 0;
  
  x = 0.0;
  y = 0.0;
  speed = 10.0;
  
  minim = new Minim(this);
 f_song  =  minim.loadFile("sound/humikiri.mp3", 5048);
}

void draw(){
  background(255);
  
  railroad_crossing();
  train();
 // f_song.play();

}

void railroad_crossing()
{
    
  fill(0,0,0);
   rect(200,200,115,3);
   rect(200,200,10,20);
   rect(315,200,10,20);
  
   rect(300,350,10,50);
    
    for(int i = 40; i < 370; i++){
      rect(255,i,10,30);
    }

    for(int i = 290; i < 650; i++){
      rect(i,300,30,10);
    }
   
    color c;
    if((int)(count / 35) % 2  == 0) {
      c = c1;
     }else{
      c = c2;
    }
    fill(c);
    ellipse(204,220,30,30);
    
    if((int)(count / 35) % 2  == 0) {
      c = c2;
     }else{
      c = c1;
    }
    fill(c);
    ellipse(320,220,30,30);
    count++;
    
    fill(200,190,200);
    rect(0,400,1000,400);
   
    fill(255,255,0);
    rect(255,70,10,30);
    rect(255,100,10,30);
    rect(255,160,10,30);
    rect(255,220,10,30);
    rect(255,280,10,30);
    rect(255,340,10,30);
    
    fill(255,255,0);
    quad(210,50,230,50,310,150,290,150);
    quad(210,150,230,150,310,50,290,50);
 
    fill(255,255,0);
    rect(320,300,30,10);
    rect(380,300,30,10);
    rect(440,300,30,10);
    rect(500,300,30,10);
    rect(560,300,30,10);
    rect(620,300,30,10);
    rect(680,300,30,10);
    
    fill(255,255,0);
    rect(280,290,50,60);
    rect(750,290,70,110);
   
    fill(0,0,0);
    quad(237,85,257,85,242,65,223,65);
    quad(263,85,280,85,297,65,280,65);
    quad(265,120,285,120,302,140,283,140);
    quad(235,120,255,120,237,140,220,140);
   
   fill(0,0,0);
    quad(300,290,310,290,280,320,280,310);
    quad(330,290,330,300,280,350,280,340);
    quad(330,320,330,330,310,350,300,350);
    
   fill(0,0,0);
    quad(790,290,810,290,750,350,750,330);
    quad(820,310,820,330,750,400,750,380);
   
   fill(230,230,230);
    rect(0,320,220,10);
    rect(0,350,220,10);
    rect(50,300,10,100);
    rect(100,300,10,100);
    rect(150,300,10,100);
    rect(200,300,10,100);
    
    rect(830,320,220,10);
    rect(830,350,220,10);
    
    rect(850,300,10,100);
    rect(900,300,10,100);
    rect(950,300,10,100); 
    
}

void train()
{
  
  x += speed;
  if(x > width + 100)
  {
    x = - 60;
    y = width - 1000;
  }
  translate(x, y);

  rectMode(CORNER);
  
  fill(0,0,0);
  rect(50,350,600,10);
  ellipse(130,360,80,80);
  ellipse(580,360,80,80);
   
  fill(0,190,20);
  rect(50,100,600,250);
  
  fill(200,200,200);
  rect(70,180,80,170);
  rect(540,180,80,170);
  
  fill(0,250,255);
  rect(80,200,20,60); 
  rect(120,200,20,60);
  rect(170,150,350,100);
  rect(550,200,20,60);
  rect(590,200,20,60);
  
  fill(255,255,255);
  quad(100,50,50,75,100,100,150,75);
  quad(600,50,550,75,600,100,650,75);
  
  line(110,180,110,400);
  line(580,180,580,400);
}

void stop() {
  super.stop();
}

