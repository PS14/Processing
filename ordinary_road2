color c1, c2, c3,c4;
int count;
int BlinkCount;                    // add
color c;                           // add

void setup(){
  size(1800,900);
  
  c1 = color(0,0,255);              // blue
    c2 = color(255,255,0);          // yellow
    c3 = color(255,0,0);            // red
    c4 = color(200,190,200);
    count = 0;
    BlinkCount = 0;                 // add

  line(710,270,1355,270);
  line(710,270,550,0);
  line(980,270,830,30);
  line(1200,270,1050,30);
  
  line(520,670,1200,670);
  line(1200,670,1350,900);
  line(750,670,870,870);
  line(970,670,1100,870);

  line(240,350,290,450);
  line(290,450,0,450);
  
  line(1600,550,1560,450);
  line(1560,450,1800,450);
  
  
  //douro left
  line(150,0,230,130);
  line(280,230,350,350);
  
  line(0,350,350,350);
  line(0,550,450,550);
  
  line(450,550,650,900);
  
  //douro right
  line(1200,0,1400,350);
  
  line(1400,350,1800,350);
  line(1500,550,1800,550);
  
  line(1500,550,1700,900);
 
 
  //hodou left
  line(260,370,360,370);
  line(270,390,370,390);
  line(280,410,380,410);
  line(290,430,390,430);
  line(300,450,400,450);
  line(310,470,410,470);
  line(320,490,420,490);
  line(330,510,430,510);
  line(340,530,440,530);
  
  //hodou right
  line(1410,370,1510,370);
  line(1420,390,1520,390);
  line(1430,410,1530,410);
  line(1440,430,1540,430);
  line(1450,450,1550,450);
  line(1460,470,1560,470);
  line(1470,490,1570,490);
  line(1480,510,1580,510);
  line(1490,530,1590,530);
  
  //houdou up
   line(330,280,370,350);
   line(350,280,390,350);
   line(370,280,410,350);
   line(390,280,430,350);
   line(410,280,450,350);
   line(430,280,470,350);
   line(450,280,490,350);
   line(470,280,510,350);
   line(490,280,530,350);
   line(510,280,550,350);
   line(530,280,570,350);
   line(550,280,590,350);
   line(570,280,610,350);
   line(590,280,630,350);
   line(610,280,650,350);
   line(630,280,670,350);
   line(650,280,690,350);
   line(670,280,710,350);
   line(690,280,730,350);
   line(710,280,750,350);
   line(730,280,770,350);
   line(750,280,790,350);
   line(770,280,810,350);
   line(790,280,830,350);
   line(810,280,850,350);
   line(830,280,870,350);
   line(850,280,890,350);
   line(870,280,910,350);
   line(890,280,930,350);
   line(910,280,950,350);
   line(930,280,970,350);
   line(950,280,990,350);
   line(970,280,1010,350);
   line(990,280,1030,350);
   line(1010,280,1050,350);
   line(1030,280,1070,350);
   line(1050,280,1090,350);
   line(1070,280,1110,350);
   line(1090,280,1130,350);
   line(1110,280,1150,350);
   line(1130,280,1170,350);
   line(1150,280,1190,350);
   line(1170,280,1210,350);
   line(1190,280,1230,350);
   line(1210,280,1250,350);
   line(1230,280,1270,350);
   line(1250,280,1290,350);
   line(1270,280,1310,350);
   line(1290,280,1300,300);
   line(1310,280,1320,290);
   line(1330,280,1340,290);

   
  //hodou down
  line(470,550,530,650);
  line(490,550,550,650);
  line(510,550,570,650);
  line(530,550,590,650);
  line(550,550,610,650);
  line(570,550,630,650);
  line(590,550,650,650);
  line(610,550,670,650);
  line(630,550,690,650);
  line(650,550,710,650);
  line(670,550,730,650);
  line(690,550,750,650);
  line(710,550,770,650);
  line(730,550,790,650);
  line(750,550,810,650);
  line(770,550,830,650);
  line(790,550,850,650);
  line(810,550,870,650);
  line(830,550,890,650);
  line(850,550,910,650);
  line(870,550,930,650);
  line(890,550,950,650);
  line(910,550,970,650);
  line(930,550,990,650);
  line(950,550,1010,650);
  line(970,550,1030,650);
  line(990,550,1050,650);
  line(1010,550,1070,650);
  line(1030,550,1090,650);
  line(1050,550,1110,650);
  line(1070,550,1130,650);
  line(1090,550,1150,650);
  line(1110,550,1170,650);
  line(1130,550,1190,650);
  line(1150,550,1210,650);
  line(1170,550,1230,650);
  line(1190,550,1250,650);
  line(1210,550,1270,650);
  line(1230,550,1290,650);
  line(1250,550,1310,650);
  line(1270,550,1330,650);
  line(1290,550,1350,650);
  line(1310,550,1370,650);
  line(1330,550,1390,650);
  line(1350,550,1410,650);
  line(1370,550,1430,650);
  line(1390,550,1450,650);
  line(1410,550,1470,650);
  line(1430,550,1490,650);
  line(1450,550,1510,650);
  line(1470,550,1530,650);  
  
  //3-1
  line(340,100,340,340);
  line(339,99,339,339);//
  line(340,100,550,100);
  line(339,99,549,99);//
  line(550,100,550,150);
  line(549,99,549,149);//
  line(550,150,340,150);
  line(549,149,339,149);//

  //3-2
 line(1510,560,1510,290);
 line(1509,559,1509,289);//
 line(1510,290,1300,290);
 line(1509,289,1299,289);//
 line(1300,290,1300,340);
 line(1299,289,1299,339);//
 line(1300,340,1510,340);
 line(1299,339,1509,339);//

 //2-1
 line(230,350,230,120);
 line(229,349,229,119);//
 line(230,120,280,120);
 line(229,119,279,119);//
 line(280,120,280,230);
 line(279,119,279,229);//
 line(280,230,230,230);
 line(279,229,229,229);//
 
 //2-2
  line(330,560,330,300);
  line(329,559,329,299);//
  line(330,300,390,300);
  line(329,299,389,299);//
  line(390,300,390,420);
  line(389,299,389,419);//
  line(390,420,330,420);
  line(389,419,329,419);//
  
  //2-4
  line(1520,340,1520,120);
  line(1519,339,1519,119);//
  line(1520,120,1460,120);
  line(1519,119,1459,119);//
  line(1460,120,1460,220);
  line(1459,119,1459,219);//
  line(1460,220,1520,220);
  line(1459,219,1519,219);//
  
  //2-5
  line(1600,560,1600,340);
  line(1599,559,1599,339);//
  line(1600,340,1540,340);
  line(1599,339,1539,339);//
  line(1540,340,1540,440);
  line(1539,339,1539,439);//
  line(1540,440,1600,440);
  line(1539,439,1599,439);//
  
}

// --------------------------------------------
//  Add
//---------------------------------------------

  void draw(){
     count++;     
        //3
    BlinkCount = count / 10 % 2;
    if(0 <= count && count <= 60 * 5) {
      c = c1;
     }
     else{
      c = c4;
     }
    fill(c);
    ellipse(370,125,30,30);
    ellipse(1340,315,30,30);

    
    if(60 * 5 < count && count <= 60 * 7) {
      c = c2;
    } else {
      c = c4;
    }
    
    fill(c);
     ellipse(430,125,30,30);
     ellipse(1400,315,30,30);
    
    if(60 * 7 < count && count <= 60 * 10) {
      c = c3;
     }else{
      c = c4;
    }

    fill(c);
   ellipse(490,125,30,30);
   ellipse(1460,315,30,30);
   
    if(0 <= count && count <= 60 * 2){
      c = c1;
    }
    else if(60 * 2 < count && count <= 60 * 4){
      if(BlinkCount == 0){
        c = c1;
      }
      else if(BlinkCount == 1){
        c = c4;
      } 
    }
    else{
      c = c4;
    }
       fill(c);
       rect(1550,390,40,40);
       rect(1470,170,40,40);
       rect(340,360,40,40);
       rect(235,175,40,40);
       
       //2-blue
       if(60 * 4 < count && count <= 60 * 10){
         c = c3;
       }
       else{
         c = c4;
       }
       fill(c);
      rect(1550,345,40,40);
      rect(1470,125,40,40);
      rect(340,310,40,40);
      rect(235,130,40,40);
      
    if(count == 60 * 10){
      count = 0;
      BlinkCount = 0;
    }

}
    
